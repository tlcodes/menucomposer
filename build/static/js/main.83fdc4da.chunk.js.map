{"version":3,"sources":["store/reducer.js","store/MenuContext.js","components/Heading.js","components/Modal.js","components/Item.js","components/Composer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","title","input","valid","open","id","conditions","name","isValid","checked","history","modal","expanded","reducer","state","arguments","length","undefined","action","type","Math","random","toString","newItems","concat","Object","toConsumableArray","objectSpread","filter","item","prevItems","newHistory","splice","updatedProps","hasOwnProperty","updatedItem","find","map","condition","includes","MenuContext","React","createContext","MenuContextProvider","props","_useReducer","useReducer","_useReducer2","slicedToArray","_useReducer2$","value","dispatch","react_default","a","createElement","Provider","children","Heading","_useContext","useContext","titleList","key","className","onClick","reduce","acc","next","Modal","recapItems","modalConditions","true_cond","false_cond","unchecked","forEach","push","join","replace","Item","_props$item","toggleCheckbox","e","updatedCondition","target","updateCondition","updatedConditions","test","onSubmit","preventDefault","onChange","index","htmlFor","Composer","itemList","components_Item","components_Heading","components_Modal","App","components_Composer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83fdc4da.chunk.js","sourcesContent":["export const initialState = {\r\n    items: [                           \r\n        {title: 'home', input: 'home', valid: true, open: false, id: '1', conditions:[\r\n          {name: \"contains_number\", isValid: true, checked: false}, \r\n          {name: \"2_chars_min\", isValid: true, checked: false}, \r\n          {name: \"not_empty\", isValid: true, checked: false}\r\n          ]},        \r\n        {title: 'about', input: 'about', valid: true, open: false, id: '2', conditions:[\r\n          {name: \"contains_number\", isValid: true, checked: false}, \r\n          {name: \"2_chars_min\", isValid: true, checked: false}, \r\n          {name: \"not_empty\", isValid: true, checked: false}\r\n          ]},        \r\n        {title: 'contact', input: 'contact', valid: true, open: false, id: '3', conditions:[\r\n          {name: \"contains_number\", isValid: true, checked: false}, \r\n          {name: \"2_chars_min\", isValid: true, checked: false}, \r\n          {name: \"not_empty\", isValid: true, checked: false}\r\n          ]},        \r\n    ],\r\n    history: [],\r\n    modal: false,\r\n    expanded: false\r\n}\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'ADD_ITEM' :        \r\n            const id = Math.random().toString();\r\n            const newItems = [\r\n                ...state.items, \r\n                {title: '', input:'', valid: false, open: false, id: id, conditions:[\r\n                {name: \"contains_number\", isValid: true, checked: false}, \r\n                {name: \"2_chars_min\", isValid: true, checked: false}, \r\n                {name: \"not_empty\", isValid: false, checked: true}\r\n            ]}];\r\n            return {\r\n                ...state,\r\n                history: [...state.history, state.items],\r\n                items: newItems\r\n            };\r\n        case 'REMOVE_ITEM' : {\r\n            let newItems = state.items.filter(item => item.id !== action.id);\r\n            return {\r\n                ...state,\r\n                history: [...state.history, state.items],\r\n                items: newItems\r\n            }\r\n        }\r\n        case 'CANCEL_ACTION' : {\r\n            if (state.history.length) {\r\n                let prevItems = state.history[state.history.length-1];\r\n                let newHistory = state.history;\r\n                newHistory.splice(newHistory.length-1, 1);\r\n                return { \r\n                    ...state,\r\n                    items: prevItems, \r\n                    history: newHistory\r\n                }\r\n            } else {\r\n                return state;\r\n            }\r\n        }\r\n        case 'UPDATE_ITEM': {\r\n            const newHistory = !action.updatedProps.hasOwnProperty('input')\r\n                ? [...state.history, state.items]\r\n                : state.history\r\n            let updatedItem = state.items.find(item => item.id === action.id);        \r\n            updatedItem = {...updatedItem, ...action.updatedProps};  \r\n            // updatedItem.valid  = condition name is false\r\n            updatedItem.valid = !updatedItem.conditions\r\n                .map(condition => condition.isValid).includes(false);\r\n            const newItems = state.items.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {...updatedItem }\r\n                }\r\n                else return item;\r\n            })\r\n            return {\r\n                ...state,                \r\n                items: newItems,\r\n                history: newHistory\r\n            }            \r\n        }\r\n        case 'OPEN_CLOSE_ALL': {\r\n            let newItems = state.items.map(item => {\r\n                return {\r\n                    ...item,\r\n                    open: action.open,                    \r\n                }\r\n            })\r\n            return {\r\n                ...state,\r\n                items: newItems,\r\n                history: [...state.history, state.items],\r\n                expanded: action.open\r\n            }\r\n        }\r\n        case 'MODAL': {\r\n            return {\r\n                ...state,\r\n                modal: !state.modal\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React, {useReducer} from 'react';\r\nimport reducer, {initialState} from './reducer';\r\n\r\nconst MenuContext = React.createContext();\r\n\r\nfunction MenuContextProvider(props) {\r\n    const [{items, modal, expanded}, dispatch] = useReducer(reducer, initialState); \r\n    const value = {items, modal, expanded, dispatch};\r\n    return (\r\n        <MenuContext.Provider value={value}>{props.children}</MenuContext.Provider>\r\n    )\r\n}\r\n\r\nexport {MenuContext, MenuContextProvider};","import React, { useContext } from 'react';\r\nimport {MenuContext} from '../store/MenuContext';\r\n\r\nfunction Heading(props) {\r\n    let {items, expanded, dispatch} = useContext(MenuContext);\r\n\r\n    const handleOpenAll = () => {\r\n        // open or close all based number of items already open\r\n        let count = items.reduce((acc, next) => {\r\n            return next.open ? acc+=1 : acc;\r\n        }, 0)\r\n        // if less than half the items are open, open them all\r\n        let open = count < items.length / 2; \r\n        dispatch({type: 'OPEN_CLOSE_ALL', open})\r\n    }\r\n\r\n    const titleList = items.length ? items.map(item => {\r\n        return (\r\n            <div key={item.id} className={item.valid ? 'green' : 'red'} id=\"menu-item\">\r\n                {item.input || 'Edit Item Title'} <sub>{item.input.length}</sub>\r\n            </div>\r\n        )\r\n    }) : null\r\n\r\n    return (\r\n        <div className=\"heading\">\r\n            <div className=\"menu\">\r\n                {titleList}\r\n            </div>\r\n            <button className=\"expand\" onClick={handleOpenAll}>{!expanded ? 'Expand All Items' : 'Close All Items'}</button>\r\n            {\r\n                props.titleList.reduce((acc, next) => next.valid ? acc +=1 : acc, 0) >= 4 &&\r\n                <button className=\"check\" onClick={() => dispatch({type: 'MODAL'})}>Check Infos</button>                \r\n            }            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heading;","import React, {useContext} from 'react';\r\nimport { MenuContext } from '../store/MenuContext';\r\n\r\nconst Modal = () => {    \r\n    const {items, dispatch} = useContext(MenuContext);\r\n    let recapItems = items.map(item => {\r\n        // recap object for our item conditions\r\n        let modalConditions = {\r\n            id: item.id,\r\n            title: item.title,\r\n            true_cond: [],\r\n            false_cond: [],\r\n            unchecked: []\r\n        }\r\n        // set conditions of item in modalConditions arrays\r\n        item.conditions.forEach(condition => {\r\n            if (condition.isValid && condition.checked) {\r\n                modalConditions.true_cond.push(condition.name);\r\n            } else if (!condition.isValid && condition.checked) {\r\n                modalConditions.false_cond.push(condition.name);\r\n            } else {\r\n                modalConditions.unchecked.push(condition.name);\r\n            }\r\n        })        \r\n        return {        \r\n          ...modalConditions\r\n        }\r\n      });\r\n    return (\r\n        <div id=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <p>Total items: {items.length}</p>\r\n                <div className=\"modal-list\">\r\n                {\r\n                    recapItems.length ? recapItems.map(item => {\r\n                        return (\r\n                            <div key={'modal'+item.id} className=\"modal-item\">\r\n                                <h3>{item.title || 'empty title'}</h3>\r\n                                <ul>\r\n                                    <li className=\"green\">True conditions:<br/>\r\n                                    {item.true_cond.join(', ').replace(/_/g, ' ') || 'none (nothing checked?)'}</li>                                   \r\n                                    <li className=\"red\">False conditions:<br/>\r\n                                    {item.false_cond.join(', ').replace(/_/g, ' ') || 'none (All good!)'}</li>                                   \r\n                                    <li className=\"blue\">Unchecked: (not verified)<br/>\r\n                                    {item.unchecked.join(', ').replace(/_/g, ' ') || 'none'}</li>                                   \r\n                                </ul>\r\n                            </div>\r\n                        )\r\n                    }) : null\r\n                }\r\n                </div>\r\n                <button className=\"close\" onClick={() => dispatch({type: 'MODAL'})}>&times;</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","import React, { useContext } from 'react';\r\nimport {MenuContext} from '../store/MenuContext'\r\n\r\nfunction Item(props) {     \r\n    let {dispatch} = useContext(MenuContext);\r\n    const {title, id, open, input, conditions } = props.item;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch({type: 'UPDATE_ITEM', id, updatedProps: {title: props.item.input}})\r\n    }\r\n\r\n    const handleOpen = () => dispatch({type: 'UPDATE_ITEM',  id, updatedProps: {open: !props.item.open} })\r\n\r\n    const handleChange = (e) => {        \r\n        // keep changes in sync, check if our input matches checked conditions       \r\n        let updatedConditions = conditions.map(condition => {\r\n            if (condition.checked){\r\n                return updateCondition(condition.name, e.target.value)\r\n            } else {\r\n                return condition\r\n            }\r\n        });\r\n        dispatch({type: 'UPDATE_ITEM', id, updatedProps: {input: e.target.value, conditions: updatedConditions}})        \r\n    }    \r\n\r\n    const toggleCheckbox = (e) => {\r\n        // update condition, if box is not checked then condition is valid (nothing to check for)\r\n        let updatedCondition = e.target.checked \r\n                        ? updateCondition(e.target.name, input)\r\n                        : {name: e.target.name, isValid: true, checked: false}                        \r\n        let updatedConditions = conditions.map(condition => {\r\n            if (condition.name === e.target.name) {\r\n                return updatedCondition;\r\n            } else return condition;\r\n        })\r\n        dispatch({type: 'UPDATE_ITEM', id, updatedProps: {conditions: updatedConditions}})      \r\n    }\r\n\r\n    const updateCondition = (condition, input) => {\r\n        switch(condition) {\r\n            case \"contains_number\" : {\r\n                return {name: condition, isValid: /[0-9]/.test(input), checked: true}\r\n            }\r\n            case \"2_chars_min\" : {\r\n                return {name: condition, isValid: input.length >= 2, checked: true}\r\n            }\r\n            case \"not_empty\" : {\r\n                return {name: condition, isValid: input !== \"\", checked: true}\r\n            }\r\n            default: return\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"item\">\r\n            <button onClick={handleOpen} className={\"open-item-btn \" + (open ? 'open-item' : 'close-item')}>&gt;</button>\r\n            <span>{title || 'Edit Item Title'}</span>                \r\n            <button onClick={() => dispatch({type: 'REMOVE_ITEM', id})}>&times;</button>\r\n            <div id=\"form-container\" className={open ? 'open-form' : 'close-form'}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <sup>{input.length}</sup>\r\n                    <input type=\"text\" value={input} onChange={handleChange} />\r\n                    <input type=\"submit\" value=\"Edit\" />\r\n                    <fieldset>\r\n                        <legend>Conditions:</legend>\r\n                        {\r\n                            conditions.map((condition, index) => {\r\n                                return (\r\n                                    <div key={'cond'+index} className=\"conditions\">\r\n                                        <input type=\"checkbox\" id={'cond'+index} name={condition.name} onChange={toggleCheckbox} checked={condition.checked}/>                                        \r\n                                        <label htmlFor={'cond'+index}>{condition.name.replace(/_/g, ' ')}</label>\r\n                                    </div>\r\n                                )\r\n                            }) \r\n                        }\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default Item;","import React, { useContext } from 'react';\r\nimport {MenuContext} from '../store/MenuContext';\r\nimport Heading from './Heading';\r\nimport Modal from './Modal';\r\nimport Item from './Item';\r\n\r\nfunction Composer() {\r\n    let {items, modal, dispatch} = useContext(MenuContext);\r\n\r\n    const itemList = items.length ? items.map(item => {\r\n        return (\r\n            <Item \r\n                key={item.id}\r\n                item={item}\r\n            />\r\n        )\r\n    }) : null;\r\n\r\n    return (\r\n        \r\n        <div className=\"composer\">\r\n            <Heading titleList={items.map(item => {\r\n                    return {title: item.title, input: item.input, valid:item.valid}\r\n                })}\r\n            />\r\n            <div>\r\n            <button className=\"cancel\" onClick={() => dispatch({type: 'CANCEL_ACTION'})}>cancel</button>\r\n            <span className=\"composer-title\">Menu Composer</span>\r\n            <button onClick={() => dispatch({type: 'ADD_ITEM'})}>+</button>\r\n            </div>\r\n            {itemList}\r\n            \r\n            {\r\n                modal &&\r\n                <Modal />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Composer;","import React, { Component } from 'react';\nimport './App.css';\nimport {MenuContextProvider} from './store/MenuContext';\nimport Composer from './components/Composer';\n\nclass App extends Component {\n  render() {\n    return (\n      <MenuContextProvider>\n        <div className=\"App\">\n          <Composer />\n        </div>\n      </MenuContextProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}